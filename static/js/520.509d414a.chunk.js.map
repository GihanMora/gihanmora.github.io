{"version":3,"file":"static/js/520.509d414a.chunk.js","mappings":"mJAIMA,EAAe,SAACC,GAIpB,MADW,mEACDC,KAAKD,IAAyB,IAAhBA,EAAKE,MAC9B,EAEKC,EAAW,CACf,KACA,QACA,OACA,iDACA,sCACA,YACA,UACA,oBACA,kDACA,iBACA,qBACA,OACA,QACA,gCACA,UAqBIC,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAInB,GAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAAiCF,EAAAA,EAAAA,UAASH,EAASI,IAAnD,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA2BJ,EAAAA,EAAAA,UAAS,GAApC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAuBA,OAhDkB,SAACC,EAAUC,GAC7B,IAAMC,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,WACRF,EAAcG,QAAUL,CACzB,GAAE,CAACA,KAEJI,EAAAA,EAAAA,YAAU,WACR,GAAIH,EAAO,CACT,IAAMK,EAAKC,aAAY,WACrBL,EAAcG,SACf,GAAEJ,GACH,OAAO,kBAAMO,cAAcF,EAApB,CACR,CACD,OAAO,WAAQ,CAChB,GAAE,CAACL,GACL,CAWCQ,EAAY,WACV,IAAIC,EAASlB,EACTmB,EAAUf,EACVA,EAXO,IAWQR,EAASI,GAAKL,SAC/BuB,GAAU,EACVC,EAAU,GAERD,IAAWtB,EAASD,OAClBG,GACFG,EAAW,GACXI,EAAW,IAEXE,GAAY,IAGdJ,EAAcP,EAASsB,GAAQE,MAAM,EAAGD,IACxClB,EAAWiB,GACXb,EAAWc,EAAU,GAExB,GAAEb,EA1BW,GA0BQ,OAGpB,gBACEe,UAAU,mBACVC,MAAO9B,EAAaU,GAAW,CAAC,EAAI,CAAEqB,MAAO,OAC7CC,aAAc,kBAAMjB,GAAY,EAAlB,EACdkB,aAAc,kBAAOzB,EAAMJ,EAASD,QAAWY,GAAY,EAA7C,EAJhB,UAME,eAAGmB,KAAMlC,EAAaU,GAAb,iBAAkCA,EAAlC,cAAwD,GAAjE,WACE,0BAAOA,KACP,gEAIP,EAEDL,EAAU8B,aAAe,CACvB7B,aAAa,GAOf,K,yFC3BA,UAhEgB,kBAGd,SAAC,IAAD,CACE8B,MAAM,mBACNC,YAAY,+DAFd,UAIE,qBAASR,UAAU,OAAOP,GAAG,UAA7B,WACE,6BACE,gBAAKO,UAAU,QAAf,UACE,eAAI,cAAY,UAAhB,UAA0B,SAAC,KAAD,CAAMS,GAAG,WAAT,4EAK9B,4BACE,0CACA,4QAGE,yBAAI,2BACF,6DACA,oHACA,yBACE,2BACE,4DACA,iFACA,kJAIJ,yIAEA,8HAOF,uCACA,gFACA,gBAAKC,MAAO,OAAQC,IAAG,UAAKC,GAAL,yCAEzB,qCACA,uEACA,gBAAKF,MAAO,OAAQC,IAAG,UAAKC,GAAL,gCACvB,gBAAKF,MAAO,OAAQC,IAAG,UAAKC,GAAL,gCAEvB,oDACA,sJACA,kCACA,yGACA,0CACA,wDAtDQ,C","sources":["components/Contact/EmailLink.js","pages/project_pages/ccv.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Validates the first half of an email address.\r\nconst validateText = (text) => {\r\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\r\n  // eslint-disable-next-line no-useless-escape\r\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\r\n  return re.test(text) || text.length === 0;\r\n};\r\n\r\nconst messages = [\r\n  'hi',\r\n  'hello',\r\n  'hola',\r\n  'you-can-email-me-at-literally-anything! Really',\r\n  'well, not anything. But most things',\r\n  'like-this',\r\n  'or-this',\r\n  'but not this :(  ',\r\n  'you.can.also.email.me.with.specific.topics.like',\r\n  'just-saying-hi',\r\n  'please-work-for-us',\r\n  'help',\r\n  'admin',\r\n  'or-I-really-like-your-website',\r\n  'thanks',\r\n];\r\n\r\nconst useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    if (delay) {\r\n      const id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n    return () => {}; // pass linter\r\n  }, [delay]);\r\n};\r\n\r\nconst EmailLink = ({ loopMessage }) => {\r\n  const hold = 50; // ticks to wait after message is complete before rendering next message\r\n  const delay = 50; // tick length in mS\r\n\r\n  const [idx, updateIter] = useState(0); // points to current message\r\n  const [message, updateMessage] = useState(messages[idx]);\r\n  const [char, updateChar] = useState(0); // points to current char\r\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\r\n\r\n  useInterval(() => {\r\n    let newIdx = idx;\r\n    let newChar = char;\r\n    if (char - hold >= messages[idx].length) {\r\n      newIdx += 1;\r\n      newChar = 0;\r\n    }\r\n    if (newIdx === messages.length) {\r\n      if (loopMessage) {\r\n        updateIter(0);\r\n        updateChar(0);\r\n      } else {\r\n        setIsActive(false);\r\n      }\r\n    } else {\r\n      updateMessage(messages[newIdx].slice(0, newChar));\r\n      updateIter(newIdx);\r\n      updateChar(newChar + 1);\r\n    }\r\n  }, isActive ? delay : null);\r\n\r\n  return (\r\n    <div\r\n      className=\"inline-container\"\r\n      style={validateText(message) ? {} : { color: 'red' }}\r\n      onMouseEnter={() => setIsActive(false)}\r\n      onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\r\n    >\r\n      <a href={validateText(message) ? `mailto:${message}@gmail.com` : ''}>\r\n        <span>{message}</span>\r\n        <span> >> gihangamage2015@gmail.com</span>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nEmailLink.defaultProps = {\r\n  loopMessage: false,\r\n};\r\n\r\nEmailLink.propTypes = {\r\n  loopMessage: PropTypes.bool,\r\n};\r\n\r\nexport default EmailLink;\r\n","import React from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\n\r\nimport Main from '../../layouts/Main';\r\nimport EmailLink from '../../components/Contact/EmailLink';\r\nimport ContactIcons from '../../components/Contact/ContactIcons';\r\n\r\n\r\n\r\nconst Contact = () => (\r\n\r\n\r\n  <Main\r\n    title=\"Armitage project\"\r\n    description=\"Contact Gihan Gamage via email @ michael.l.dangelo@gmail.com\"\r\n  >\r\n    <article className=\"post\" id=\"contact\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2 data-testid=\"heading\"><Link to=\"/contact\">Call recording analysis of Cancer Council Victoria(CCV)</Link></h2>\r\n        </div>\r\n\r\n\r\n      </header>\r\n      <div>\r\n        <h3>Introduction</h3>\r\n        <p>The main objective of this project was to analyse call recordings received to cancer council Victoria(CCV) and generate interactive dashboard.\r\n          Here a total of 60,081 calls were analysed from 2018 to 2021.\r\n          Following are the main objectives.\r\n          <ul><ul>\r\n            <li>Transcribe the call recordings.</li>\r\n            <li>Extract emotions from the phone calls belonging to bipolar and eight emotion spectrum.\r\n            <ul>\r\n              <ul>\r\n                <li>Analysing the emotion outputs.</li>\r\n                <li>Analysing keywords belonging to different emotions.</li>\r\n                <li>Analysing emotions based on call length, type of cancer, stages of cancer and different temporal dimensions.</li>\r\n              </ul>\r\n            </ul>\r\n            </li>\r\n            <li>Model emotional trends throughout the calls. - How emotion intensity fluctuated over the period of the call\r\n            </li>\r\n            <li>Thematic extraction of the call recordings. - Extract different themes using seed words.\r\n            </li>\r\n\r\n          </ul></ul>\r\n\r\n        </p>\r\n\r\n          <h3>Framework</h3>\r\n          <p>Following figure shows the framework of the system.</p>\r\n          <img width={'100%'} src={`${process.env.PUBLIC_URL}/images/projects/ccv_framework.png`}  />\r\n\r\n        <h3>Results</h3>\r\n        <p>Summary of the results from call analysis.</p>\r\n        <img width={'100%'} src={`${process.env.PUBLIC_URL}/images/projects/ccv1.png`}  />\r\n        <img width={'100%'} src={`${process.env.PUBLIC_URL}/images/projects/ccv2.png`}  />\r\n\r\n        <h3>Technologies and areas</h3>\r\n        <p>Python, Keyword matching, Word embedding, Deep emotion extraction(Emotion AWARE), Speech-to-text(Azure), Emotion dynamics</p>\r\n        <h3>Team</h3>\r\n        <p>Gihan Gamage(me), Sajani Ranasinghe, A. Prof. Daswin De Silva, Harsha Kumara</p>\r\n        <h3>Publications</h3>\r\n        <p>Publication in review</p>\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Contact;\r\n"],"names":["validateText","text","test","length","messages","EmailLink","loopMessage","useState","idx","updateIter","message","updateMessage","char","updateChar","isActive","setIsActive","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newIdx","newChar","slice","className","style","color","onMouseEnter","onMouseLeave","href","defaultProps","title","description","to","width","src","process"],"sourceRoot":""}